
#Использовать cmdline
#Использовать parserFileV8i
// #Использовать ".."


Процедура ВывестиИнформацию(СписокБаз)
	Для каждого База Из СписокБаз Цикл
		СтруктураАдреса = База.Значение;

		Сообщить(СтруктураАдреса.Name);
		Для каждого Часть Из СтруктураАдреса Цикл
			Сообщить("	" + Часть.Ключ + " = " + Часть.Значение);
			Если Часть.Ключ = "Connect" Тогда
				Сообщить("		" + Часть.Ключ + " = " +  Часть.Значение.String);
				Для каждого ЧастьПути Из Часть.Значение.Structure Цикл
					Сообщить("		" + ЧастьПути.Ключ + " = " +  ЧастьПути.Значение);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьОбщийКаталогКеша()	// Почти копия функции из parserFileV8i
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ЭтоWindows = Найти(ВРег(СистемнаяИнформация.ВерсияОС), "WINDOWS") > 0;
	Если ЭтоWindows Тогда
		КаталогКеша = ОбъединитьПути(
			ПолучитьПеременнуюСреды("USERPROFILE"),
			"appdata\local\1c\1cv8");
	Иначе
		ЗначениеПеременной = ПолучитьПеременнуюСреды(ВРег("HOME"));
		КаталогКеша = ОбъединитьПути(ЗначениеПеременной, "./.1cv82/1C/1Cv82/");
	КонецЕсли;
	Возврат КаталогКеша;
КонецФункции // ПолучитьОбщийКаталогКеша()

Функция УдалитьКаталог(ПутьКаталога)
	Попытка
		УдалитьФайлы(ПутьКаталога);
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	Возврат Истина;
КонецФункции // УдалитьКешБазы(База)

Функция ПолучитьТЗСоСпискомБаз(Порядок = "")
	КоллекцияИБ = ПолучитьСписокБаз();
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ИмяБазы",, 			"Имя базы");
	ТЗ.Колонки.Добавить("СтрокаСоединения",, 	"Строка соединения");
	ТЗ.Колонки.Добавить("ID",,					"Идентификатор");
	ТЗ.Колонки.Добавить("ОбъемКаталога",, 		"Объем каталога");
	

	Для каждого База Из КоллекцияИБ Цикл
		СтруктураАдреса = База.Значение;

		Если СтруктураАдреса.OrderInList = "-1" Тогда	// Это "папка" списка баз
			Продолжить;
		КонецЕсли;	

		ИД 			= СтруктураАдреса.ID;
		ИмяИБ 		= СтруктураАдреса.Name;
		АдресБазы 	= СтрЗаменить(СтруктураАдреса.Connect.String, "Connect=", "");

		СтрокаТЗ = ТЗ.Добавить();
		СтрокаТЗ.ИмяБазы 			= ИмяИБ;
		СтрокаТЗ.СтрокаСоединения 	= АдресБазы;
		СтрокаТЗ.ID 				= ИД;
		СтрокаТЗ.ОбъемКаталога		= ВычислитьОбъемКаталога(ПутьККаталогуБазы(ИД));
			
	КонецЦикла;

	Если Порядок = "Возр" ИЛИ Порядок = "Убыв" Тогда
		ТЗ.Сортировать("ОбъемКаталога " + Порядок);
	КонецЕсли;
	
	Возврат ТЗ;	
	
КонецФункции

Функция ПолучитьСписокБаз()
	Парсер = Новый ПарсерСпискаБаз;
	Сообщить("Вывод основного файла");
	Парсер.УстановитьФайл();

	СписокБаз = Парсер.ПолучитьСписокБаз();
	// ВывестиИнформацию(СписокБаз);	

	Возврат СписокБаз;
КонецФункции

Функция ВычислитьОбъемКаталога(ПутьККаталогуБазы)
	ОбъемКаталога = 0;
	//КаталогБДКеша = Новый Файл(ПутьККаталогуБазы);
	//ОбъемКаталога = КаталогБДКеша.Размер();
	Возврат Окр(ОбъемКаталога, 2);	// Объем в Гб, точность 2 знака
КонецФункции // ВычислитьОбъемКаталога()

Функция ПутьККаталогуБазы(АдресБазы)
	Возврат "";	
КонецФункции // ПутьККаталогуБазы()

Функция ПолучитьПараметрыКомманднойСтроки()

	Парсер = Новый ПарсерАргументовКоманднойСтроки();
	Парсер.ДобавитьПараметр("Команда");
	Параметры = Парсер.Разобрать(АргументыКоманднойСтроки);

	Команда = Параметры["Команда"];

	Возврат Команда;

КонецФункции

Процедура ВывестиСписокИнформационныхБаз()
	СписокБаз = ПолучитьТЗСоСпискомБаз();
		Массив = Новый Массив(3);
		Для каждого База Из СписокБаз Цикл

			Массив.Очистить();
			Массив.Добавить(Лев(" | " + База.ОбъемКаталога+"             Гб", 7));
			Массив.Добавить(Лев(База.ИмяБазы+"                             ", 30));
			Массив.Добавить(База.ID);
			Массив.Добавить(Символы.ПС);
			ИтоговаяСтрока = СтрСоединить(Массив, " | ");
			Сообщить(ИтоговаяСтрока, СтатусСообщения.Информация);
			
		КонецЦикла;
КонецПроцедуры

Процедура ВыполнитьКоманду(Команда)

	Если Команда = "-s" ИЛИ Команда = "--show" Тогда
		ВывестиСписокИнформационныхБаз();
	ИначеЕсли Команда = "-ca" ИЛИ Команда = "--clearAll" Тогда
		Чистильщик = Новый ОчисткаКеша();
		//Чистильщик.УстановитьПарсер(Парсер);
		Чистильщик.ОчиститьВесьКеш();
		// + сделать очистку балласта
	ИначеЕсли Команда = "-cd" ИЛИ Команда = "--clearDead" Тогда
		ОбщийКаталогКеша = ПолучитьОбщийКаталогКеша();
		ВложенныеКаталоги = НайтиФайлы(ОбщийКаталогКеша, "????????-????-????-????-????????????");
		Для каждого КаталогКешаБД Из ВложенныеКаталоги Цикл
			УдалитьКаталог(КаталогКешаБД.ПолноеИмя);
			Сообщить("Удален: " + КаталогКешаБД.ПолноеИмя);			
		КонецЦикла;
	ИначеЕсли Команда = "-m" ИЛИ Команда = "--mark" Тогда
		Сообщить("Промаркировать каталоги");
	ИначеЕсли Команда = "-o" ИЛИ Команда = "--open" Тогда
		ОбщийКаталогКеша = ПолучитьОбщийКаталогКеша();
		ВыполнитьКоманду("C:\Windows\explorer.exe");// """ + ОбщийКаталогКеша + """");
	Иначе
		Сообщить("Неподдерживаемая команда");
	КонецЕсли;
КонецПроцедуры


Команда = ПолучитьПараметрыКомманднойСтроки();
Если Команда = Неопределено
	ИЛИ Команда = "-h"
	ИЛИ Команда = "--help" Тогда
	Сообщить("Показываем справку");
Иначе
	ВыполнитьКоманду(Команда);
КонецЕсли;

// ДЕЙСТВИЯ
// "Вывести список всех баз"
//	-s	--show
// "Очистить ВЕСЬ кэш"
//	-ca	--clearAll
// "Очистить БАЛЛАСТНЫЙ кэш" - кэш уже не существующих баз
//	-cd --clearDead
// "Проставить имена баз в родительском каталоге"
//	-m --mark
// "Открыть родительский каталог"
//	-o	--open
